# task-1

def shiftLeft(source,k):
  array = source
  for i in range(0,k):
    array[i] = array[i+k]
  for i in range(k,len(array)):
    array[i] = 0
  for i in array:
    print(i,end=" ")
array = [10,20,30,40,50,60]
shiftLeft (array,3)

# task2

def rotateLeft (source,k):
  array = source
  temp = 0
  for i in range (0,k):
    temp = array[i]
    array[i] = array[i+k]
    array[i+k] = temp

  for i in array:
    print(i,end=" ")
array = [10,20,30,40,50,60]
rotateLeft(array,3)

# task3

def remove(source,size,idx):
  array = source
  #n= int(input())
  for i in range(idx,size):
    array[i] = array[i+1]
    array[i+1] = 0
  #for i in range()
  for i in array:
    print(i,end=" ")
array = [10,20,30,40,50,0,0]
remove(array,5,2)

# task 4

def remove(l1,A,B):

    i = 0

    while i <B-1:
        if l1[i] == A:
            if l1[i+1]== None:
                l1[i] == 0
            else:
                l1[i] = l1[i+1]
                j = i
                for j in range(i,B-1):
                    l1[j] = l1[j+1]
                    j= j+1

                l1[B-1] = 0


        i = i+1

    return(l1)

l1 = [10,2,30,2,50,2,2,60,0,0]
A = 2
B = len(l1)
print(remove(l1,A,B))


# task 5

def equalsum(source):
  array = source
  add = 0
  sum = 0
  similarity = 0
  for i in range(0,len(array)-1):
    sum = 0
    add = 0
    for i in range(0,i+1):
      add+=array[i]
  
    
    for  i in range(i+1,len(array)):
    
      sum+=array[i]
  
    if sum==add:
      similarity+=1
      
  if similarity==1:
    print("True")
  else:
    print("False")
array = [10, 3, 10, 2, 1]  
equalsum(array)

# task 6

def arraySeries(n):
    index=0
    array = [0]*(n*n)
    for i in range(1,n+1):
        diff = n-i
        for x in range(diff):
            array[index] = 0
            index = index+1
        for y in range(n-diff,0,-1):
            array[index] = y
            index = index+1
    return array
n = int(input())
print(arraySeries(n))


# task 7

def maxBunchCount(source):
  array = source
  maxCount = 0

  for i in range(0,len(ar)):
    count = 1 
    for i in range(i,len(ar)-1):
    
      if ar[i]==ar[i+1]:
        count+=1
      else:
        break
    if count>maxCount:
      maxCount = count
  print(maxCount)
ar =  [1,1,2, 2, 1, 1,1,1]
maxBunchCount(ar)


# task 8

def repition(array):
    temp = {}
    for i in range(len(array)):
        if array[i] not in temp:
            temp[array[i]] = 0
        temp[array[i]]= temp[array[i]]+1
    for j in temp.values():
        count = 0
        for k in temp.values():
            if j>1 and j==k:
                count= count+1
        if count>=2:
            return True
    if count<2:
        return False
    
print(repition([4,5,6,6,4,3,6,4]))

# Circular Array- 1

def palindrome(source, begin, size):
    temp = size//2
    count = 0
    ret = True
    while count<temp:
        if source[begin] == source[(begin+size-count)%len(source)-1]:
            begin += 1
            size -= 1
            count += 1
        else:
            ret = False
            break
    return ret
a= [20,10,0,0,0,10,20,30] 
print(palindrome(a,5,5))

# Circular Array- 2

def intersection(a, b, c, d, e, f):
    def inArray( val, arr, start=None, size=None):
        if size == None and start == None:
            size = len(arr)
            start = 0
        i = start
        count = 0
        while count<size:
            i = i%len(arr)
            if arr[i] == val:
                return True
            i+=1
            count+=1
        return False
    i = b
    count = 0
    ret = []
    while count<c:
        i = i%len(a)
        if inArray(a[i], d, e, f) and not inArray(a[i], ret):
            ret.append(a[i])
        i+=1
        count+=1
    return ret
a1= [40,50,0,0,0,10,20,30]
a2= [10,20,5,0,0,0,0,0,5,40,15,25] 
print(intersection(a1,5,5,a2,8,7))